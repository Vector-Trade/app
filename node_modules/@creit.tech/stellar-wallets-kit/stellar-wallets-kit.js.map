{"version":3,"file":"stellar-wallets-kit.js","sources":["../src/stellar-wallets-kit.ts"],"sourcesContent":["import { StellarWalletsModal } from './modal/stellar-wallets-modal';\nimport {\n  IStellarWalletsSignAuthEntry,\n  IStellarWalletsSignBlob,\n  IStellarWalletsSignTx,\n  ISupportedWallet,\n  KitActions,\n  ModuleInterface,\n  WalletNetwork,\n} from './types';\n\nexport interface StellarWalletsKitParams {\n  selectedWalletId: string;\n  network: WalletNetwork;\n  modules: ModuleInterface[];\n}\n\nexport class StellarWalletsKit implements KitActions {\n  private selectedWallet!: string;\n  private selectedModule!: ModuleInterface;\n  private network!: WalletNetwork;\n  private modalElement?: StellarWalletsModal;\n  private readonly modules: ModuleInterface[];\n\n  constructor(params: StellarWalletsKitParams) {\n    this.modules = params.modules;\n    this.setWallet(params.selectedWalletId);\n    this.setNetwork(params.network);\n  }\n\n  /**\n   * This method will return an array with all wallets supported by this kit but will let you know those the user have already installed/has access to\n   * There are wallets that are by default available since they either don't need to be installed or have a fallback\n   */\n  async getSupportedWallets(): Promise<ISupportedWallet[]> {\n    return Promise.all(\n      this.modules.map(async (mod: ModuleInterface): Promise<ISupportedWallet> => {\n        const timer: Promise<false> = new Promise(r => setTimeout(() => r(false), 500));\n        return {\n          id: mod.productId,\n          name: mod.productName,\n          type: mod.moduleType,\n          icon: mod.productIcon,\n          isAvailable: await Promise.race([timer, mod.isAvailable()]),\n          url: mod.productUrl,\n        };\n      })\n    );\n  }\n\n  public setNetwork(network: WalletNetwork): void {\n    if (!Object.values(WalletNetwork).includes(network)) {\n      throw new Error(`Wallet network \"${network}\" is not supported`);\n    }\n\n    this.network = network;\n  }\n\n  public setWallet(id: string): void {\n    const target: ModuleInterface | undefined = this.modules.find(\n      (mod: ModuleInterface): boolean => mod.productId === id\n    );\n\n    if (!target) {\n      throw new Error(`Wallet id \"${id}\" is not supported`);\n    }\n\n    this.selectedWallet = target.productId;\n    this.selectedModule = target;\n  }\n\n  public async getPublicKey(params?: { path?: string }): Promise<string> {\n    if (!this.selectedWallet) {\n      throw new Error('Please set the wallet type first');\n    }\n\n    return this.selectedModule.getPublicKey(params);\n  }\n\n  async signTx(params: { xdr: string; publicKeys: string[]; network: WalletNetwork }): Promise<{ result: string }> {\n    if (!this.selectedWallet) {\n      throw new Error('Please set the wallet type first');\n    }\n\n    return this.selectedModule.signTx(params);\n  }\n\n  async signBlob(params: { blob: string; publicKey?: string }): Promise<{ result: string }> {\n    if (!this.selectedWallet) {\n      throw new Error('Please set the wallet type first');\n    }\n\n    return this.selectedModule.signBlob(params);\n  }\n\n  async signAuthEntry(params: { entryPreimageXDR: string; publicKey?: string }): Promise<{ result: string }> {\n    if (!this.selectedWallet) {\n      throw new Error('Please set the wallet type first');\n    }\n\n    return this.selectedModule.signAuthEntry(params);\n  }\n\n  /**\n   * @deprecated - This method will be removed in future releases.\n   * Use specific methods instead like signTx, signBlob, etc\n   */\n  public async sign(\n    params: IStellarWalletsSignBlob | IStellarWalletsSignTx | IStellarWalletsSignAuthEntry\n  ): Promise<{ signedXDR: string }> {\n    if (!this.selectedWallet) {\n      throw new Error('Please set the wallet type first');\n    }\n\n    let signedXDR: string;\n    if ((params as IStellarWalletsSignTx).xdr) {\n      const { result } = await this.selectedModule.signTx({\n        xdr: (params as IStellarWalletsSignTx).xdr,\n        network: params.network || this.network,\n        publicKeys: params.publicKey ? [params.publicKey] : [],\n      });\n      signedXDR = result;\n    } else if ((params as IStellarWalletsSignBlob).blob) {\n      const { result } = await this.selectedModule.signBlob({\n        blob: (params as IStellarWalletsSignBlob).blob,\n        publicKey: params.publicKey,\n      });\n      signedXDR = result;\n    } else if ((params as IStellarWalletsSignAuthEntry).entryPreimageXDR) {\n      const { result } = await this.selectedModule.signBlob({\n        blob: (params as IStellarWalletsSignAuthEntry).entryPreimageXDR,\n        publicKey: params.publicKey,\n      });\n      signedXDR = result;\n    } else {\n      throw new Error(`Something went wrong, make sure the parameters are correct`);\n    }\n\n    return { signedXDR };\n  }\n\n  // ---- Modal methods\n  public async openModal(params: {\n    onWalletSelected: (option: ISupportedWallet) => void;\n    onClosed?: (err: Error) => void;\n    modalDialogStyles?: { [name: string]: string | number | undefined | null };\n    modalTitle?: string;\n    notAvailableText?: string;\n  }): Promise<void> {\n    if (this.modalElement) {\n      throw new Error(`Stellar Wallets Modal is already open`);\n    }\n\n    this.modalElement = document.createElement('stellar-wallets-modal') as StellarWalletsModal;\n    this.modalElement.setAttribute('showModal', '');\n\n    if (params.modalDialogStyles) {\n      this.modalElement.setAttribute('modalDialogStyles', JSON.stringify(params.modalDialogStyles));\n    }\n\n    const supportedWallets: ISupportedWallet[] = await this.getSupportedWallets();\n    this.modalElement.setAttribute('allowedWallets', JSON.stringify(supportedWallets));\n\n    if (params.modalTitle) {\n      this.modalElement.setAttribute('modalTitle', params.modalTitle);\n    }\n\n    if (params.notAvailableText) {\n      this.modalElement.setAttribute('notAvailableText', params.notAvailableText);\n    }\n\n    document.body.appendChild(this.modalElement);\n\n    const listener = (event: CustomEvent) => {\n      params.onWalletSelected(event.detail);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.modalElement.removeEventListener('wallet-selected', listener, false);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      document.body.removeChild(this.modalElement);\n      this.modalElement = undefined;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.modalElement.addEventListener('wallet-selected', listener, false);\n\n    const errorListener = (event: CustomEvent) => {\n      if (params.onClosed) {\n        params.onClosed(event.detail);\n      }\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.modalElement.removeEventListener('wallet-selected', listener, false);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.modalElement.removeEventListener('modal-closed', errorListener, false);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      document.body.removeChild(this.modalElement);\n      this.modalElement = undefined;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.modalElement.addEventListener('modal-closed', errorListener, false);\n  }\n  // ---- END Modal methods\n}\n"],"names":[],"mappings":"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"}