import { ModuleType } from '../types.js';

const HANA_ID = "hana";
class HanaModule {
  constructor() {
    this.moduleType = ModuleType.HOT_WALLET;
    this.productId = HANA_ID;
    this.productName = "Hana Wallet";
    this.productUrl = "https://hanawallet.io/";
    this.productIcon = "https://stellar.creit.tech/wallet-icons/hana.svg";
  }
  async isAvailable() {
    return !!window.hanaWallet?.stellar;
  }
  async getPublicKey() {
    if (!window.hanaWallet?.stellar) {
      throw new Error("Hana Wallet is not installed");
    }
    return window.hanaWallet.stellar.getPublicKey();
  }
  async signTx(params) {
    if (!window.hanaWallet?.stellar) {
      throw new Error("Hana Wallet is not installed");
    }
    let updatedXdr = params.xdr;
    for (const publicKey of params.publicKeys) {
      updatedXdr = await window.hanaWallet.stellar.signTransaction({
        xdr: updatedXdr,
        accountToSign: publicKey,
        networkPassphrase: params.network
      });
    }
    return { result: updatedXdr };
  }
  async signBlob(params) {
    if (!window.hanaWallet?.stellar) {
      throw new Error("Hana Wallet is not installed");
    }
    return {
      result: await window.hanaWallet.stellar.signBlob({ blob: params.blob, accountToSign: params.publicKey })
    };
  }
  async signAuthEntry(params) {
    if (!window.hanaWallet?.stellar) {
      throw new Error("Hana Wallet is not installed");
    }
    return {
      result: await window.hanaWallet.stellar.signAuthEntry({
        xdr: params.entryPreimageXDR,
        accountToSign: params.publicKey
      })
    };
  }
}

export { HANA_ID, HanaModule };
//# sourceMappingURL=hana.module.js.map
