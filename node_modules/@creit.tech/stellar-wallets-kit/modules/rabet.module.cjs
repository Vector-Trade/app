'use strict';

var types = require('../types.cjs');

const RABET_ID = "rabet";
class RabetModule {
  constructor() {
    this.moduleType = types.ModuleType.HOT_WALLET;
    this.productId = RABET_ID;
    this.productName = "Rabet";
    this.productUrl = "https://rabet.io/";
    this.productIcon = "https://stellar.creit.tech/wallet-icons/rabet.svg";
  }
  async isAvailable() {
    return !!window.rabet;
  }
  async getPublicKey() {
    if (!window.rabet) {
      throw new Error("Rabet is not installed");
    }
    const { publicKey } = await window.rabet.connect();
    return publicKey;
  }
  async signTx(params) {
    if (!window.rabet) {
      throw new Error("Rabet is not installed");
    }
    if (params.network !== types.WalletNetwork.PUBLIC && params.network !== types.WalletNetwork.TESTNET) {
      throw new Error(`Rabet doesn't support the network: ${params.network}`);
    }
    if (params.publicKeys.length > 0) {
      console.warn(`Rabet doesn't allow specifying the public keys to use`);
    }
    const result = await window.rabet.sign(
      params.xdr,
      params.network === types.WalletNetwork.PUBLIC ? "mainnet" /* PUBLIC */ : "testnet" /* TESTNET */
    );
    return { result: result.xdr };
  }
  // @ts-expect-error - This is not a supported operation so we don't use the params
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  async signBlob(params) {
    throw new Error("Rabet does not support signing random blobs");
  }
  // @ts-expect-error - This is not a supported operation so we don't use the params
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  async signAuthEntry(params) {
    throw new Error("Rabet does not support signing authorization entries");
  }
}
var RabetNetwork = /* @__PURE__ */ ((RabetNetwork2) => {
  RabetNetwork2["PUBLIC"] = "mainnet";
  RabetNetwork2["TESTNET"] = "testnet";
  return RabetNetwork2;
})(RabetNetwork || {});

exports.RABET_ID = RABET_ID;
exports.RabetModule = RabetModule;
exports.RabetNetwork = RabetNetwork;
//# sourceMappingURL=rabet.module.cjs.map
