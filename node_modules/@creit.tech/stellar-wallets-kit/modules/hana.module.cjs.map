{"version":3,"file":"hana.module.cjs","sources":["../../src/modules/hana.module.ts"],"sourcesContent":["import { ModuleInterface, ModuleType } from '../types';\n\ninterface SignTransactionProps {\n  xdr: string;\n  accountToSign: string;\n  networkPassphrase: string;\n}\n\ninterface SignBlobProps {\n  blob: string;\n  accountToSign: string;\n}\n\ninterface SignAuthEntryProps {\n  xdr: string;\n  accountToSign: string;\n}\n\ndeclare const window: Window & {\n  hanaWallet?: {\n    stellar?: {\n      getPublicKey(): Promise<string>;\n      signTransaction({ xdr, accountToSign, networkPassphrase }: SignTransactionProps): Promise<string>;\n      signBlob({ blob, accountToSign }: SignBlobProps): Promise<string>;\n      signAuthEntry({ xdr, accountToSign }: SignAuthEntryProps): Promise<string>;\n    };\n  };\n};\n\nexport const HANA_ID = 'hana';\n\nexport class HanaModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = HANA_ID;\n  productName: string = 'Hana Wallet';\n  productUrl: string = 'https://hanawallet.io/';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/hana.svg';\n\n  async isAvailable(): Promise<boolean> {\n    return !!window.hanaWallet?.stellar;\n  }\n\n  async getPublicKey(): Promise<string> {\n    if (!window.hanaWallet?.stellar) {\n      throw new Error('Hana Wallet is not installed');\n    }\n\n    return window.hanaWallet.stellar.getPublicKey();\n  }\n\n  async signTx(params: { xdr: string; publicKeys: string[]; network: string }): Promise<{ result: string }> {\n    if (!window.hanaWallet?.stellar) {\n      throw new Error('Hana Wallet is not installed');\n    }\n\n    let updatedXdr: string = params.xdr;\n    for (const publicKey of params.publicKeys) {\n      updatedXdr = await window.hanaWallet.stellar.signTransaction({\n        xdr: updatedXdr,\n        accountToSign: publicKey,\n        networkPassphrase: params.network,\n      });\n    }\n\n    return { result: updatedXdr };\n  }\n\n  async signBlob(params: { blob: string; publicKey: string }): Promise<{ result: string }> {\n    if (!window.hanaWallet?.stellar) {\n      throw new Error('Hana Wallet is not installed');\n    }\n\n    return {\n      result: await window.hanaWallet.stellar.signBlob({ blob: params.blob, accountToSign: params.publicKey }),\n    };\n  }\n\n  async signAuthEntry(params: { entryPreimageXDR: string; publicKey: string }): Promise<{ result: string }> {\n    if (!window.hanaWallet?.stellar) {\n      throw new Error('Hana Wallet is not installed');\n    }\n\n    return {\n      result: await window.hanaWallet.stellar.signAuthEntry({\n        xdr: params.entryPreimageXDR,\n        accountToSign: params.publicKey,\n      }),\n    };\n  }\n}\n"],"names":["ModuleType"],"mappings":";;;;AA6BO,MAAM,OAAU,GAAA,OAAA;AAEhB,MAAM,UAAsC,CAAA;AAAA,EAA5C,WAAA,GAAA;AACL,IAAA,IAAA,CAAA,UAAA,GAAyBA,gBAAW,CAAA,UAAA,CAAA;AAEpC,IAAoB,IAAA,CAAA,SAAA,GAAA,OAAA,CAAA;AACpB,IAAsB,IAAA,CAAA,WAAA,GAAA,aAAA,CAAA;AACtB,IAAqB,IAAA,CAAA,UAAA,GAAA,wBAAA,CAAA;AACrB,IAAsB,IAAA,CAAA,WAAA,GAAA,kDAAA,CAAA;AAAA,GAAA;AAAA,EAEtB,MAAM,WAAgC,GAAA;AACpC,IAAO,OAAA,CAAC,CAAC,MAAA,CAAO,UAAY,EAAA,OAAA,CAAA;AAAA,GAC9B;AAAA,EAEA,MAAM,YAAgC,GAAA;AACpC,IAAI,IAAA,CAAC,MAAO,CAAA,UAAA,EAAY,OAAS,EAAA;AAC/B,MAAM,MAAA,IAAI,MAAM,8BAA8B,CAAA,CAAA;AAAA,KAChD;AAEA,IAAO,OAAA,MAAA,CAAO,UAAW,CAAA,OAAA,CAAQ,YAAa,EAAA,CAAA;AAAA,GAChD;AAAA,EAEA,MAAM,OAAO,MAA6F,EAAA;AACxG,IAAI,IAAA,CAAC,MAAO,CAAA,UAAA,EAAY,OAAS,EAAA;AAC/B,MAAM,MAAA,IAAI,MAAM,8BAA8B,CAAA,CAAA;AAAA,KAChD;AAEA,IAAA,IAAI,aAAqB,MAAO,CAAA,GAAA,CAAA;AAChC,IAAW,KAAA,MAAA,SAAA,IAAa,OAAO,UAAY,EAAA;AACzC,MAAA,UAAA,GAAa,MAAM,MAAA,CAAO,UAAW,CAAA,OAAA,CAAQ,eAAgB,CAAA;AAAA,QAC3D,GAAK,EAAA,UAAA;AAAA,QACL,aAAe,EAAA,SAAA;AAAA,QACf,mBAAmB,MAAO,CAAA,OAAA;AAAA,OAC3B,CAAA,CAAA;AAAA,KACH;AAEA,IAAO,OAAA,EAAE,QAAQ,UAAW,EAAA,CAAA;AAAA,GAC9B;AAAA,EAEA,MAAM,SAAS,MAA0E,EAAA;AACvF,IAAI,IAAA,CAAC,MAAO,CAAA,UAAA,EAAY,OAAS,EAAA;AAC/B,MAAM,MAAA,IAAI,MAAM,8BAA8B,CAAA,CAAA;AAAA,KAChD;AAEA,IAAO,OAAA;AAAA,MACL,MAAQ,EAAA,MAAM,MAAO,CAAA,UAAA,CAAW,OAAQ,CAAA,QAAA,CAAS,EAAE,IAAA,EAAM,MAAO,CAAA,IAAA,EAAM,aAAe,EAAA,MAAA,CAAO,WAAW,CAAA;AAAA,KACzG,CAAA;AAAA,GACF;AAAA,EAEA,MAAM,cAAc,MAAsF,EAAA;AACxG,IAAI,IAAA,CAAC,MAAO,CAAA,UAAA,EAAY,OAAS,EAAA;AAC/B,MAAM,MAAA,IAAI,MAAM,8BAA8B,CAAA,CAAA;AAAA,KAChD;AAEA,IAAO,OAAA;AAAA,MACL,MAAQ,EAAA,MAAM,MAAO,CAAA,UAAA,CAAW,QAAQ,aAAc,CAAA;AAAA,QACpD,KAAK,MAAO,CAAA,gBAAA;AAAA,QACZ,eAAe,MAAO,CAAA,SAAA;AAAA,OACvB,CAAA;AAAA,KACH,CAAA;AAAA,GACF;AACF;;;;;"}